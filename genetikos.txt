Η εργασία που είχα να υλοποιήσω με θέμα: Να αναπτυχθεί σύστημα με το οποίο να επιτυγχάνεται η πρόγνωση απώλειας πελατών/συνδρομητών (customer churn prediction) 
από τηλεπικοινωνιακές εταιρείες. Να επιλεγούν τα κατάλληλα χαρακτηριστικά με τα οποία θα αποφασίζεται ο προς αποχώρηση συνδρομητής. 
Η επιλογή του μοντέλου απόφασης, καθώς και οποιασδήποτε παραμέτρου του συστήματος, αφήνεται στην ελεύθερη κρίση σας.
 

Αρχικά χρησιμοποίησα το ταξινομητή k-NN. Χρησιμοποιήθηκε ένα dataset το οποίο περιέχει 21 στείλες και το πλήθος των γραμμών του έιναι 3335.

Πρώτα έγινε η επεξεργασια του dataset. Οι στείλες που δεν είχαν νούμερα αντικαταστήθηκαν.
Το αρχικό dataset Churn χωρίστηκε σε TEST1 και σε ΤEST2. 
Το  TEST1 περιέχει τα features(=χαρακτηριστικά) που θέλουμε να ταξινομήσουμε.
Το TEST2 περιέχει τα ground thruth και ονομάζεται churn.
Έγιναν οι κατάλληλες αλλαγές στα train και test δεδομένα.
Η απόδοση του k-NN είναι περιπού στo 82%. Δηλαδή αυτό σημαίνει ότι ο  classifier μας 
πρόβλεψε σωστά το 81% από τα training data. 


Στη συνέχεια αποφάσισα να χρησιμοποιήσω το γενετικό αλγόριθμο σε συνδυασμό με τον ταξινομητή k-NN. 
Χρησιμοποίησα το ίδιο dataset.

Στο κώδικα που μας έχει δωθεί προσθέτω τα dataset με την εντολή xlsread(' ');
Στη συνέχεια φορτώνω τα dataset στο k-NN για να γίνουν τα train και τα test δεδομένα.
Αντικαθιστώ τον πίνακα meas με τον data.
Στους ποίνακες LB[], UB[] βάζουμε την χαμηλότερη και υψηλότερη τιμή που θέλουμε να έχουμε ως πιθανή 
λύση, αντίστοιχα, δηλαδή είναι τα όρια των τιμών. 
Αλλάζω το NumofVars και το κάνω 5. Στη συνάρτηση αλλάζω το PopulationSize και το Generation το βάζω 40,
όπου είναι το πλήθος των πιθανών λύσεω και το EliteCount που πέρνει την τιμή 5, και είναι το πλήθος των
καλύτερων λύσεων που θέλω να βρω. 
Στη συνέχεια αφού έχουν γίνει παραπάνω οι απαραίτητητες ρυθμίσεις καλώ τον γενετικό.
Σε αλλό φύλο εργασίας γίνεται η εκτέλεση του γενετικού σε συνδυασμό με τον k-NN ταξινομητή. 
Αρχικα γίνεται η κανονικοποίηση των features, έπειτα γίνεται ο έλεγχος για διπλότυπα, μετά ο υπολογισμός 
features και τέλος ο υπολογιμός καταλληλότητας των features όπου εδώ έχω προσθέσει το cp.CorrectRate του 
k-NN ταξινομητή ώστε να μου εμφανίζει την απόδοση του όταν εκτελείτε.

Έπειτα εκτελούμε το κώδικα μας και βλέπουμε ένα διάγραμμα και στους άξονες υπάρχουν το fitness value 
και το generation. Δηλαδή απεικονίζεται το fitness value για τα Generations που υπολογιστικαν. Οι μαύρες 
κουκίδες είναι τα mean fitness(=χειρότερες τιμές) και οι μπλε είναι τα best fitness(=καλύτερες τιμές).
Γενικά ο γενετικός δεν βρίσκει μια μονομένη καλύτερη τιμή αλλά 'ομάδες'(=population) αυτών.
Επίσεις βλέπουμε ότι ο ταξινομητής μας έχει απόδοση γύρω στο 87%. 
Δηλαδή αυτό σημαίνει ότι ο  classifier μας πρόβλεψε σωστά το 87% από τα training data. 
Παρατηρούμε ότι έχει καλύτερα αποτελέσμτα απ' ότι όταν το δοκιμάσαμε μόνο του. 
Tέλος πάμε στο workspace του matlab και πάμε στον πίνακα Χ εκεί είναι αποθηκευμένες κάποιες τιμές 
τις οποίες τις κάνουμε στρογγυλοποίηση προς τα πάνω και αυτά είναι τα features από το feature selection 
του γενετικού. 


